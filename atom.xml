<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端 - 分享园</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tomieric.github.io/"/>
  <updated>2016-02-21T15:17:31.000Z</updated>
  <id>http://tomieric.github.io/</id>
  
  <author>
    <name>TommyShao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>拥抱ES6(一) - 认识babel</title>
    <link href="http://tomieric.github.io/2016/02/21/get-stared-use-es6/"/>
    <id>http://tomieric.github.io/2016/02/21/get-stared-use-es6/</id>
    <published>2016-02-20T16:00:00.000Z</published>
    <updated>2016-02-21T15:17:31.000Z</updated>
    
    <content type="html">&lt;!-- endcontent --&gt;&lt;div class=&quot;figure figure--fullWidth&quot;&gt;&lt;img class=&quot;figure-img&quot; src=&quot;/assets/images/post/20160107202032_470.jpg&quot; alt=&quot; Lost ES6&quot;&gt;&lt;span class=&quot;caption&quot;&gt; Lost ES6&lt;/span&gt;&lt;/div&gt;&lt;!-- content --&gt;
&lt;blockquote&gt;
&lt;p&gt;Babel 是一个 JavaScript 编译器。&lt;br&gt;今天就来用下一代 JavaScript 语法写代码吧！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;EMAscript已经发布了&lt;code&gt;es2015&lt;/code&gt;也就是&lt;code&gt;ES6&lt;/code&gt;, 提供了丰富的API和函数编程语法，但由于各浏览器的支持性还是有限，我们需要折衷的办法——编译器。&lt;/p&gt;
&lt;p&gt;早在&lt;code&gt;ES6&lt;/code&gt;发布前，&lt;code&gt;babel&lt;/code&gt;已经活跃在前端开发社区中，比如facebooke的开源框架&lt;code&gt;react&lt;/code&gt;就很早使用了&lt;code&gt;babel&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装babel&quot;&gt;&lt;a href=&quot;#安装babel&quot; class=&quot;headerlink&quot; title=&quot;安装babel&quot;&gt;&lt;/a&gt;安装babel&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[sudo] npm &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; babel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装完成后可以在终端中使用&lt;code&gt;babel&lt;/code&gt;命令&lt;/p&gt;
&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; 编译输出文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s [inline]&lt;/code&gt; 生成&lt;code&gt;sourcemap&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;example&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;babel &lt;span class=&quot;keyword&quot;&gt;script&lt;/span&gt;.es -o &lt;span class=&quot;keyword&quot;&gt;script&lt;/span&gt;.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用&lt;code&gt;*.es&lt;/code&gt;命名文件是更好的区分es6语法源文件和编译文件&lt;/p&gt;
&lt;p&gt;babel有许多优秀的插件，利用插件我们可以将&lt;code&gt;es6&lt;/code&gt;语法转化成相应的对应&lt;code&gt;javascript&lt;/code&gt;版本文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;插件集合&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://babeljs.io/docs/plugins/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://babeljs.io/docs/plugins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们需要通过使用插件来支持最新的&lt;code&gt;es&lt;/code&gt;语法，现在我们使用最新的&lt;code&gt;ES6&lt;/code&gt;语法，将使用&lt;code&gt;ES2015 preset&lt;/code&gt;这个插件&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://babeljs.io/docs/plugins/preset-es2015/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://babeljs.io/docs/plugins/preset-es2015/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装-babel-preset-es2015&quot;&gt;&lt;a href=&quot;#安装-babel-preset-es2015&quot; class=&quot;headerlink&quot; title=&quot;安装 babel-preset-es2015&quot;&gt;&lt;/a&gt;安装 &lt;code&gt;babel-preset-es2015&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; babel-preset-es2015&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置-babelrc&quot;&gt;&lt;a href=&quot;#配置-babelrc&quot; class=&quot;headerlink&quot; title=&quot;配置.babelrc&quot;&gt;&lt;/a&gt;配置&lt;code&gt;.babelrc&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;babel的编译可以通过读取&lt;code&gt;.babelrc&lt;/code&gt;文件配置中的&lt;code&gt;presets&lt;/code&gt;插件集进行编译。&lt;/p&gt;
&lt;p&gt;为项目创建一个&lt;code&gt;.babelrc&lt;/code&gt; 文件&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;touch&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;.babelrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到当前目录下增加了这个文件，然后编辑声明使用&lt;code&gt;es2015&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// .babelrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;presets&quot;&lt;/span&gt; : [&lt;span class=&quot;string&quot;&gt;&quot;es2015&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;重新编译&lt;code&gt;script.es&lt;/code&gt;文件&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;babel &lt;span class=&quot;keyword&quot;&gt;script&lt;/span&gt;.es -o &lt;span class=&quot;keyword&quot;&gt;script&lt;/span&gt;.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;源文件：&lt;/p&gt;
&lt;figure class=&quot;highlight ceylon&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// script.es&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译完成文件：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// script.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&quot;use strict&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//# sourceMappingURL=script.js.map&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;相关资料&quot;&gt;&lt;a href=&quot;#相关资料&quot; class=&quot;headerlink&quot; title=&quot;相关资料&quot;&gt;&lt;/a&gt;相关资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://babeljs.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://babeljs.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://babeljs.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://babeljs.cn/ 中文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://es6.ruanyifeng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ECMAScript 6 入门&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;!-- endcontent --&gt;&lt;div class=&quot;figure figure--fullWidth&quot;&gt;&lt;img class=&quot;figure-img&quot; src=&quot;/assets/images/post/20160107202032_470.jpg&quot; alt=&quot; Lost
    
    </summary>
    
      <category term="javascript" scheme="http://tomieric.github.io/categories/javascript/"/>
    
    
      <category term="babel" scheme="http://tomieric.github.io/tags/babel/"/>
    
      <category term="es6" scheme="http://tomieric.github.io/tags/es6/"/>
    
      <category term="javascript" scheme="http://tomieric.github.io/tags/javascript/"/>
    
      <category term="js" scheme="http://tomieric.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://tomieric.github.io/2016/02/20/hello-world/"/>
    <id>http://tomieric.github.io/2016/02/20/hello-world/</id>
    <published>2016-02-19T16:00:00.000Z</published>
    <updated>2016-02-21T15:15:05.000Z</updated>
    
    <content type="html">&lt;!-- endcontent --&gt;&lt;div class=&quot;figure figure--fullWidth&quot;&gt;&lt;img class=&quot;figure-img&quot; src=&quot;/assets/images/background.jpg&quot; alt=&quot; A beautiful sunrise&quot;&gt;&lt;span class=&quot;caption&quot;&gt; A beautiful sunrise&lt;/span&gt;&lt;/div&gt;&lt;!-- content --&gt;
&lt;p&gt;由于旧博客用&lt;code&gt;airpub.io&lt;/code&gt;，多说的账号被&lt;code&gt;CSRF&lt;/code&gt;攻击造成大部分博文被注入删除&lt;/p&gt;
&lt;p&gt;说多了都是泪&lt;del&gt;~~(&amp;gt;_&amp;lt;)&lt;/del&gt;~~&lt;/p&gt;
&lt;p&gt;已经决定了新博客用&lt;code&gt;hexo&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;博客历程&quot;&gt;&lt;a href=&quot;#博客历程&quot; class=&quot;headerlink&quot; title=&quot;博客历程&quot;&gt;&lt;/a&gt;博客历程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;大学时期用免费asp主机，html模板&lt;/li&gt;
&lt;li&gt;上班后用博客园&lt;/li&gt;
&lt;li&gt;为了更多酷炫皮肤，用wordpress&lt;/li&gt;
&lt;li&gt;打破限制，用免费php主机跑wordpress，买过域名&lt;code&gt;www.fenxiangyuan.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;累了，用gitpage，静态html，域名过期续不了，换成&lt;code&gt;http://www.get2e.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;启用&lt;code&gt;airpub&lt;/code&gt;,在gitpage上直接动态写文章，不用经常git操作&lt;/li&gt;
&lt;li&gt;发简历给猎头，猎头说博客东西好少，看了一下原来被攻击，好多文章丢失了，也找不回了，在多说上没有备份&lt;/li&gt;
&lt;li&gt;决定还是以静态方式，选择hexo因为模板够漂酿。实在没钱买VPS，掏捣nodejs去搭建个博客。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;关于博客发布&quot;&gt;&lt;a href=&quot;#关于博客发布&quot; class=&quot;headerlink&quot; title=&quot;关于博客发布&quot;&gt;&lt;/a&gt;关于博客发布&lt;/h3&gt;&lt;p&gt;文档看的一头雾水，发布目录只能在hexo项目目录里&lt;/p&gt;
&lt;p&gt;只能把项目弄到&lt;code&gt;admin&lt;/code&gt;目录，&lt;code&gt;hexo deploy&lt;/code&gt;生成的&lt;code&gt;public&lt;/code&gt;目录，通过&lt;code&gt;gulpfile&lt;/code&gt;（工作用这个比较熟）拷贝到根目录并清空&lt;code&gt;public&lt;/code&gt;目录。&lt;/p&gt;
&lt;p&gt;终于搞定了，在一个周末的下午。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;!-- endcontent --&gt;&lt;div class=&quot;figure figure--fullWidth&quot;&gt;&lt;img class=&quot;figure-img&quot; src=&quot;/assets/images/background.jpg&quot; alt=&quot; A beautiful sunri
    
    </summary>
    
      <category term="杂谈" scheme="http://tomieric.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="杂谈" scheme="http://tomieric.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>jQuery核心函数队列</title>
    <link href="http://tomieric.github.io/2015/04/10/jquery-queue/"/>
    <id>http://tomieric.github.io/2015/04/10/jquery-queue/</id>
    <published>2015-04-09T16:00:00.000Z</published>
    <updated>2016-02-21T14:49:24.000Z</updated>
    
    <content type="html">&lt;p&gt;首先先说个例子&lt;/p&gt;
&lt;p&gt;之前在做一个多个进度条动画时写了个东西&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sandbox.runjs.cn/show/ytyxhtib&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sandbox.runjs.cn/show/ytyxhtib&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* progress bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* by tomieric&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* http://getf2e.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.fn.extend(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;progressbar&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;config&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; opt = $.extend(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			parent: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			callback: $.noop,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			duration: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;, config ||&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).each(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $self = $(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;), data = $self.data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; per = data.per;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					(per = per  || &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; (per = per &amp;gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; : per);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					$self.animate(&amp;#123; width: per+&lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt;&amp;#125;, opt.duration, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						opt.callback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						fnDequeue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.percent-bar&#39;&lt;/span&gt;).progressbar();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到所有进度条是一个同步的动画，那如果我们想有一个队列的效果，第一个动画执行完后再执行第二个有什么方法呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;css3动画transition-delay&lt;/li&gt;
&lt;li&gt;js队列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里不讨论css3的写法，因为老板们想兼容更多的浏览器&lt;/p&gt;
&lt;h2 id=&quot;队列&quot;&gt;&lt;a href=&quot;#队列&quot; class=&quot;headerlink&quot; title=&quot;队列&quot;&gt;&lt;/a&gt;队列&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;队列是一种特殊的线性表，特殊之处在于它只允许在表的前端（front）进行删除操作，而在表的后端（rear）进行插入操作，和栈一样，队列是一种操作受限制的线性表。进行插入操作的端称为队尾，进行删除操作的端称为队头。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是百度百科上的解释。&lt;/p&gt;
&lt;p&gt;我的理解是一个同步的动作，必需上一个任务者完成任务后再到当前动作，比如800米接力赛跑。&lt;/p&gt;
&lt;p&gt;之前也写过队列的对象，在&lt;a href=&quot;http://project.tomieric.com/christmas/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;圣诞倒计时&lt;/a&gt;中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; AnimQueque = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	list: [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	add: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj, cls, fn&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.list.push(&amp;#123; obj: obj, cls: cls, fn: fn&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	resolve: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cache = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.list.shift();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!cache) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.to(cache.obj, cache.cls, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; cache.fn === &lt;span class=&quot;string&quot;&gt;&quot;function&quot;&lt;/span&gt; &amp;amp;&amp;amp; cache.fn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			AnimQueque.resolve();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	to: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj,cls, fn&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		$(obj).addClass(cls).one(&lt;span class=&quot;string&quot;&gt;&#39;webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend&#39;&lt;/span&gt;, fn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;利用队列数组将要改变的css变量存放起来，然后每次从数组顶部拿出一个css变量，监听每个css3动画结束回调函数，每次动画完成再执行第二个步骤形成一个递归。&lt;/p&gt;
&lt;h2 id=&quot;jQuery队列&quot;&gt;&lt;a href=&quot;#jQuery队列&quot; class=&quot;headerlink&quot; title=&quot;jQuery队列&quot;&gt;&lt;/a&gt;jQuery队列&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;queue(element, [queueName])&lt;ul&gt;
&lt;li&gt;&lt;code&gt;element&lt;/code&gt; 检测附加队列的DOM元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;queueName&lt;/code&gt; 字符串值，包含序列的名称。默认是 fx, 标准的效果序列。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;newQueue&lt;/code&gt;:替换当前函数列队内容的数组&lt;/li&gt;
&lt;li&gt;&lt;code&gt;callback()&lt;/code&gt;:要添加进队列的函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;dequeue([queueName])&lt;ul&gt;
&lt;li&gt;&lt;code&gt;queueName&lt;/code&gt; 队列名，默认为fx&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;clearQueue([queueName])&lt;ul&gt;
&lt;li&gt;&lt;code&gt;queueName&lt;/code&gt; 含有队列名的字符串。默认是”Fx”，动画队列。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;好，现在我们来改造进度条那个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* progress bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; tomieric&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* http://getf2e.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.fn.extend(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;progressbar&#39;&lt;/span&gt;: function(config)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var opt = $.extend(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			parent: null,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			callback: $.noop,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			duration: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;, config ||&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var &lt;span class=&quot;variable&quot;&gt;$body&lt;/span&gt; = $(document.body),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				_queue = [],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				fnDequeue = function()&amp;#123; &lt;span class=&quot;variable&quot;&gt;$body&lt;/span&gt;.dequeue(&lt;span class=&quot;string&quot;&gt;&#39;jq.progressbar&#39;&lt;/span&gt;) &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		$(this).each(function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			var &lt;span class=&quot;variable&quot;&gt;$self&lt;/span&gt; = $(this), data = &lt;span class=&quot;variable&quot;&gt;$self&lt;/span&gt;.data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if(data.queque) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_queue.push(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					var per = data.per;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					(per = per  || &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; (per = per &amp;gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; : per);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;variable&quot;&gt;$self&lt;/span&gt;.animate(&amp;#123; width: per+&lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt;&amp;#125;, opt.duration, function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						opt.callback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						fnDequeue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;variable&quot;&gt;$self&lt;/span&gt;.data(&lt;span class=&quot;string&quot;&gt;&#39;queque&#39;&lt;/span&gt;, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		* 用body唯一dom元素存放，$(this)是一个元素集合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;variable&quot;&gt;$body&lt;/span&gt;.queue(&lt;span class=&quot;string&quot;&gt;&#39;jq.progressbar&#39;&lt;/span&gt;, _queue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 触发堆栈&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fnDequeue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return this;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;.percent-bar&#39;&lt;/span&gt;).progressbar(&amp;#123;duration: &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后我们再来看看效果&lt;a href=&quot;http://sandbox.runjs.cn/show/o3lknjcj&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sandbox.runjs.cn/show/o3lknjcj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;fork &lt;a href=&quot;http://runjs.cn/detail/o3lknjcj&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://runjs.cn/detail/o3lknjcj&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首先先说个例子&lt;/p&gt;
&lt;p&gt;之前在做一个多个进度条动画时写了个东西&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://sandbox.runjs.cn/show/ytyxhtib&quot;&gt;http://sandbox.runjs.cn/show/ytyxhtib&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://tomieric.github.io/categories/JavaScript/"/>
    
    
      <category term="-jquery -javascript -插件" scheme="http://tomieric.github.io/tags/jquery-javascript-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>nodeList-forEach</title>
    <link href="http://tomieric.github.io/2014/10/11/nodeList-foreach/"/>
    <id>http://tomieric.github.io/2014/10/11/nodeList-foreach/</id>
    <published>2014-10-10T16:00:00.000Z</published>
    <updated>2016-02-21T14:49:24.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;nodeList-forEach&quot;&gt;&lt;a href=&quot;#nodeList-forEach&quot; class=&quot;headerlink&quot; title=&quot;nodeList-forEach&quot;&gt;&lt;/a&gt;nodeList-forEach&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;array.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(callback[, thisArg])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;forEach 方法按升序为数组中的每个有值的元素执行一次给定的 callback&lt;br&gt; 函数，只有在那些有值的索引上才会调用 callback 函数，那些被删除掉的索引或者从未赋值过的索引将会被跳过。&lt;/p&gt;
&lt;p&gt;callback 函数会被依次传入三个参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元素值&lt;/li&gt;
&lt;li&gt;元素索引&lt;/li&gt;
&lt;li&gt;被遍历的数组对象本身&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;详细介绍&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.nodeList能直接使用forEach函数么？&lt;/p&gt;
&lt;p&gt;比如我们有下面这样的代码&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll( &lt;span class=&quot;string&quot;&gt;&#39;ul.grid &amp;gt; li &amp;gt; figure&#39;&lt;/span&gt; ).forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el, i&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(el);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果是出错了：&lt;/p&gt;
&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TypeError: Object #&amp;lt;NodeList&amp;gt; &lt;span class=&quot;keyword&quot;&gt;has&lt;/span&gt; no &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt; &#39;&lt;span class=&quot;title&quot;&gt;forEach&lt;/span&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;nodeList对象是没有forEach方法的，forEach方法是数组的一个内置方法。&lt;/p&gt;
&lt;p&gt;那我们直接输出&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;document.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;( &lt;span class=&quot;string&quot;&gt;&#39;ul.grid &amp;gt; li &amp;gt; figure&#39;&lt;/span&gt; )&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会得到什么，在控制台上可以看到一个数组对象。&lt;/p&gt;
&lt;p&gt;我们知道nodeList是类似数组的对象，那可以通过Array.prototype.slice将nodeList转换成数组。&lt;/p&gt;
&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;list&quot;&gt;[].slice.call&lt;span class=&quot;list&quot;&gt;( document.querySelectorAll&lt;span class=&quot;list&quot;&gt;( &lt;span class=&quot;variable&quot;&gt;&#39;ul.grid&lt;/span&gt; &amp;gt; li &amp;gt; figure&#39; )&lt;/span&gt; )&lt;/span&gt;.forEach&lt;span class=&quot;list&quot;&gt;( function&lt;span class=&quot;list&quot;&gt;( el, i )&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;el&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;nodeList-forEach&quot;&gt;&lt;a href=&quot;#nodeList-forEach&quot; class=&quot;headerlink&quot; title=&quot;nodeList-forEach&quot;&gt;&lt;/a&gt;nodeList-forEach&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;array.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(callback[, thisArg])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;forEach 方法按升序为数组中的每个有值的元素执行一次给定的 callback&lt;br&gt; 函数，只有在那些有值的索引上才会调用 callback 函数，那些被删除掉的索引或者从未赋值过的索引将会被跳过。&lt;/p&gt;
&lt;p&gt;callback 函数会被依次传入三个参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元素值&lt;/li&gt;
&lt;li&gt;元素索引&lt;/li&gt;
&lt;li&gt;被遍历的数组对象本身&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://tomieric.github.io/categories/JavaScript/"/>
    
    
      <category term="-ES5 -javascript" scheme="http://tomieric.github.io/tags/ES5-javascript/"/>
    
  </entry>
  
  <entry>
    <title>FullPage.js尝试</title>
    <link href="http://tomieric.github.io/2014/09/25/fullpage/"/>
    <id>http://tomieric.github.io/2014/09/25/fullpage/</id>
    <published>2014-09-24T16:00:00.000Z</published>
    <updated>2016-02-21T14:49:24.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;FullPage-js尝试&quot;&gt;&lt;a href=&quot;#FullPage-js尝试&quot; class=&quot;headerlink&quot; title=&quot;FullPage.js尝试&quot;&gt;&lt;/a&gt;FullPage.js尝试&lt;/h1&gt;&lt;p&gt;我们经常会经常看到这样的产品页&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.mi.com/shouhuan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mi.com/shouhuan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;是不是觉得很高端大气上档次&lt;/p&gt;
&lt;p&gt;那我们这样实现呢？&lt;/p&gt;
&lt;p&gt;首先我们来做一个没有插件版的Fullscreen，使用原始的javascript,css3来实现。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;布局&lt;br&gt;我们把每页都绝对定位在body上 宽高为100%就可以满足全屏的布局&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 屏幕 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stage stage1&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;slide1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 内容 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stage stage2&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;slide2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 内容 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stage stage3&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;slide3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 内容 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 导航 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;slide-nav&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;#slide1&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;on&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;#slide2&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;#slide3&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加每屏内容和样式动画之后&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ginosin.esy.es/fullscreen/example-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ginosin.esy.es/fullscreen/example-1.html&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;js实现滚屏交互&lt;br&gt;1.实现导航tab切换&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们定义两个变量分别存放导航索引项和每页屏幕的dom集合。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 存放所有屏nodelist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; screens = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 导航项nodeList&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; navs = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在页面dom就绪时候分别获取页面的集合对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// dom就绪&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;DOMContentLoaded&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 获取屏幕nodelist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    screens = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;.stage&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 获取导航nodelist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    navs = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;.slide-nav a&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是我们需要通过鼠标点击页面右侧的导航小圆点来进行屏幕切换。由于我们已经写好css3动画和样式，只需给当前页（屏幕）添加类名active而其他页需要去掉active这个类。&lt;/p&gt;
&lt;p&gt;那我们来简单的实现一个addClass和removeClass的函数（被jquery毒害的很深）&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/* 工具类 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var util = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* 添加类名 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addClass: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(obj, cls)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj.className = obj.className.indexOf(cls) &amp;gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ? obj.className : obj.className+&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;+cls;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /* 删除类名 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeClass: &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(obj, cls)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj.className = obj.className.replace(cls, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;现在通过循环导航项nodeList来绑定点击事件，通过我们在html中给定的rel值作为当前页的索引&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* 导航点击切换 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(var i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; navs.length; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    navs[i].onclick = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(event)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(this.className.indexOf(&lt;span class=&quot;string&quot;&gt;&#39;on&#39;&lt;/span&gt;) === -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pn = parseInt(this.getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;rel&#39;&lt;/span&gt;) || pn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //changeNav();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        event.preventDefault();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;具体查看源码&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ginosin.esy.es/fullscreen/example-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ginosin.esy.es/fullscreen/example-2.html&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;实现鼠标滚动轮滑切换&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;鼠标轮滑事件的监听&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// FF13- 鼠标轮滑事件监听&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;DOMMouseScroll&#39;&lt;/span&gt;, scrollFn, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 轮滑事件监听&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;window.onmousewheel = document.onmousewheel = scrollFn;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 滚动函数，鼠标轮滑滑动&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var scrollFn = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(event)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var event = event || window.event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!playing)&amp;#123; // 不在动画过度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(event.wheelDelta &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;  // 向下滑动，负值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // 向下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                motion(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //向上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                motion(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每次滚动我们需要等待动画完成后才能进行下一屏。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 设置锁屏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;playingdelay&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    playing = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 间隔playingduration秒后才能执行下一个动作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Timeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123; playing = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;; &amp;#125;, playingduration)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后我们要添加键盘上的上下左右和空格键也能实现屏幕的切换&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 键盘上下左右，空格键控制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.onkeydown = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(event)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var event = event || window.event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var c = event.keyCode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(c == &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt; || c == &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; || c == &lt;span class=&quot;number&quot;&gt;39&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        motion(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(c == &lt;span class=&quot;number&quot;&gt;38&lt;/span&gt; || c == &lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        motion(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终实现了我们要的效果：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ginosin.esy.es/fullscreen/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ginosin.esy.es/fullscreen/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中鼠标轮滑代码借鉴了&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://browser.qq.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://browser.qq.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于Fullpage.js插件&lt;br&gt;想要更强大的功能，我们必须上开源的插件fullpage.js&lt;/p&gt;
&lt;p&gt;具体查看插件的案例.&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;http://alvarotrigo.com/fullPage/examples/apple.html)(http://alvarotrigo.com/fullPage/examples/apple.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://alvarotrigo.com/fullPage/examples/apple.html)(http://alvarotrigo.com/fullPage/examples/apple.html&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;以前公司最近弄的一个专题，也是我现在想尝试做一个的念头。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.yiihuu.com/event/3year/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.yiihuu.com/event/3year/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好了回到正题。我们用fullpage.js怎么实现上面那个例子呢。&lt;/p&gt;
&lt;p&gt;先看html结构&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div id=&lt;span class=&quot;string&quot;&gt;&quot;fullpage&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;section&quot;&lt;/span&gt; id=&lt;span class=&quot;string&quot;&gt;&quot;section1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;pc&quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;phone&quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;pad&quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;text1&quot;&lt;/span&gt;&amp;gt;麦克普肉 &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;text2&quot;&lt;/span&gt;&amp;gt;艾凤五爱斯  &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;text3&quot;&lt;/span&gt;&amp;gt;牛    艾派得 &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;section&quot;&lt;/span&gt; id=&lt;span class=&quot;string&quot;&gt;&quot;section2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;pao&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;book&quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;p1&quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;p2&quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;nav&quot;&lt;/span&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;text4&quot;&lt;/span&gt;&amp;gt;欲练神功&amp;lt;br/&amp;gt;无需自X&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;section&quot;&lt;/span&gt; id=&lt;span class=&quot;string&quot;&gt;&quot;section3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;mac&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;triangle&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;div class=&lt;span class=&quot;string&quot;&gt;&quot;circle&quot;&lt;/span&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;p class=&lt;span class=&quot;string&quot;&gt;&quot;text5&quot;&lt;/span&gt;&amp;gt;热吗？&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;无非是给每一屏dom元素加上section类，而且是不需要导航&lt;/p&gt;
&lt;p&gt;还是原来的样式只需要稍稍改动一下。&lt;/p&gt;
&lt;p&gt;那么JS是怎样写的呢？登登灯~&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(document).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;.section&#39;&lt;/span&gt;).eq(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).removeClass(&lt;span class=&quot;string&quot;&gt;&#39;active&#39;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&#39;active&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;#fullpage&#39;&lt;/span&gt;).fullpage(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sectionsColor: [&lt;span class=&quot;string&quot;&gt;&#39;#2F65C0&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;#9253B2&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;#0C86D3&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        navigation: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        navigationTooltips: [&lt;span class=&quot;string&quot;&gt;&#39;移动生活&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;传统书籍&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;电脑改变生活&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loopBottom: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loopTop: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        css3: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是不是简单爆了！&lt;/p&gt;
&lt;p&gt;别忘了要引入多个js文件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;http://cdn.staticfile.org/jquery/1.11.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;fullpage/jquery.easings.min.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;fullpage/jquery.fullPage.min.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好了我们看一下效果，看看有什么区别&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ginosin.esy.es/fullscreen/fullpage.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ginosin.esy.es/fullscreen/fullpage.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于fullpage.js的配置，详看&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alvarotrigo/fullPage.js#options&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/alvarotrigo/fullPage.js#options&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;FullPage-js尝试&quot;&gt;&lt;a href=&quot;#FullPage-js尝试&quot; class=&quot;headerlink&quot; title=&quot;FullPage.js尝试&quot;&gt;&lt;/a&gt;FullPage.js尝试&lt;/h1&gt;&lt;p&gt;我们经常会经常看到这样的产品页&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.mi.com/shouhuan&quot;&gt;http://www.mi.com/shouhuan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;是不是觉得很高端大气上档次&lt;/p&gt;
&lt;p&gt;那我们这样实现呢？&lt;/p&gt;
&lt;p&gt;首先我们来做一个没有插件版的Fullscreen，使用原始的javascript,css3来实现。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://tomieric.github.io/categories/JavaScript/"/>
    
    
      <category term="-jquery -javascript -插件" scheme="http://tomieric.github.io/tags/jquery-javascript-%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式</title>
    <link href="http://tomieric.github.io/2014/08/20/javascript-regExp/"/>
    <id>http://tomieric.github.io/2014/08/20/javascript-regExp/</id>
    <published>2014-08-19T16:00:00.000Z</published>
    <updated>2016-02-21T14:49:24.000Z</updated>
    
    <content type="html">&lt;!-- excerpt --&gt;
&lt;p&gt;创建一个正则表达式&lt;/p&gt;
&lt;p&gt;第一种方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /pattern/;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第二种方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = new  RegExp(&amp;apos;pattern&amp;apos;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正则表达式的exec方法简介&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg.exec(str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中str为要执行正则表达式的目标字符串。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script  type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    var reg = /test/;
    var str = &amp;apos;testString&amp;apos;;
    var result =  reg.exec(str);
    alert(result);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将会输出&lt;code&gt;test&lt;/code&gt;，因为正则表达式&lt;code&gt;reg&lt;/code&gt;会匹配&lt;code&gt;str(‘testString’)&lt;/code&gt;中的&lt;code&gt;’test’&lt;/code&gt;子字符串，并且将其返回。&lt;/p&gt;
&lt;p&gt;我们使用下面的函数来做匹配正则的练习：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function  execReg(reg,str){   
    var result =  reg.exec(str);  
    alert(result);  
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;函数接受一个正则表达式参数&lt;code&gt;reg&lt;/code&gt;和一个目标字符串参数&lt;code&gt;str&lt;/code&gt;，执行之后会&lt;code&gt;alert&lt;/code&gt;出正则表达式与字符串的匹配结果。&lt;/p&gt;
&lt;p&gt;用这个函数测试上面的例子就是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        function execReg(reg, str) {
                var result = reg.exec(str);
                alert(result);
        }
        var reg = /test/;
        var str = &amp;apos;testString&amp;apos;;
        execReg(reg, str);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的例子用正则里的&lt;code&gt;test&lt;/code&gt;去匹配字符串里的&lt;code&gt;test&lt;/code&gt;，实在是很无聊，同样的任务用&lt;code&gt;indexOf&lt;/code&gt;方法就可以完成了。用正则，自然是要完成更强大的功能：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一片两片三四片，落尽正则全不见&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上面的小标题翻译成正则就是&lt;code&gt;{1},{2},{3,4},{1,}&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c{n}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{1}&lt;/code&gt;表示一个的意思。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/c{1}/&lt;/code&gt;只能匹配一个&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/c{2}/&lt;/code&gt;则会匹配两个连续的&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;以此类推,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/c{n}/&lt;/code&gt;则会匹配&lt;code&gt;n&lt;/code&gt;个连续的&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;看下面的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{1}/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回结果&lt;code&gt;c&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{2}/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回结果&lt;code&gt;null&lt;/code&gt;，表示没有匹配成功。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{2}/;
str = &amp;apos;ccVC果冻爽&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回结果&lt;code&gt;cc&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c{m,n}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c{3,4}&lt;/code&gt;的意思是，连续的3个&lt;code&gt;c&lt;/code&gt;或者4个&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{3,4}/;
str = &amp;apos;ccVC果冻爽&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回结果&lt;code&gt;null&lt;/code&gt;，表示没有匹配成功。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{3,4}/;
str = &amp;apos;cccTest&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果返回&lt;code&gt;ccc&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{3,4}/;
str = &amp;apos;ccccTest&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果返回&lt;code&gt;cccc&lt;/code&gt;，这表明正则会尽量多匹配，可3可4的时候它会选择多匹配一个。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{3,4}/;
str = &amp;apos;cccccTest&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;仍然只匹配4个&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;由以上例子可以推断出，&lt;code&gt;c{m,n}&lt;/code&gt;表示&lt;code&gt;m&lt;/code&gt;个到&lt;code&gt;n&lt;/code&gt;个&lt;code&gt;c&lt;/code&gt;，且&lt;code&gt;m&lt;/code&gt;小于等于&lt;code&gt;n&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c{n,}&lt;/code&gt;,&lt;code&gt;c{1,}&lt;/code&gt;表示1个以上的c。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{1,}/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果返回&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{1,}/;
str = &amp;apos;cccccTest&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回ccccc，再次说明了正则表达式会尽量多地匹配。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{2,}/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果返回&lt;code&gt;null&lt;/code&gt;，&lt;code&gt;c{2,}&lt;/code&gt;表示&lt;code&gt;2&lt;/code&gt;个以上的&lt;code&gt;c&lt;/code&gt;，而&lt;code&gt;cainiao&lt;/code&gt;中只有1个&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;由以上例子可知，&lt;code&gt;c{n,}&lt;/code&gt;表示最少&lt;code&gt;n&lt;/code&gt;个&lt;code&gt;c&lt;/code&gt;，最多则不限个数。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*,+,?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;*&lt;/code&gt;表示&lt;code&gt;0&lt;/code&gt;次或者多次，等同于&lt;code&gt;{0,}&lt;/code&gt;，即&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c*&lt;/code&gt; 和 &lt;code&gt;c{0,}&lt;/code&gt; 是一个意思。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt;表示一次或者多次，等同于&lt;code&gt;{1,}&lt;/code&gt;，即&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c+&lt;/code&gt; 和 &lt;code&gt;c{1,}&lt;/code&gt; 是一个意思。&lt;/p&gt;
&lt;p&gt;最后，&lt;code&gt;?&lt;/code&gt;表示&lt;code&gt;0&lt;/code&gt;次或者&lt;code&gt;1&lt;/code&gt;次，等同于&lt;code&gt;{0,1}&lt;/code&gt;，即&lt;/p&gt;
&lt;p&gt;&lt;code&gt;c?&lt;/code&gt; 和 &lt;code&gt;c{0,1}&lt;/code&gt; 是一个意思。&lt;/p&gt;
&lt;p&gt;贪心与非贪心&lt;/p&gt;
&lt;p&gt;人都是贪婪的，正则也是如此。我们在例子&lt;code&gt;reg = /c{3,4}/;str=&amp;#39;ccccTest&amp;#39;;&lt;/code&gt;的例子中已经看到了，能匹配四个的时候，正则绝对不会去匹配三个。上面所介绍的所有的正则都是这样，只要在合法的情况下，它们会尽量多去匹配字符，这就叫做贪心模式。&lt;/p&gt;
&lt;p&gt;如果我们希望正则尽量少地匹配字符，那么就可以在表示数字的符号后面加上一个?。组成如下的形式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{n,}?, *?, +?, ??, {m,n}?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;同样来看一个例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c{1,}?/;
str = &amp;apos;ccccc&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回的结果只有1个&lt;code&gt;c&lt;/code&gt;，尽管有5个&lt;code&gt;c&lt;/code&gt;可以匹配，但是由于正则表达式是非贪心模式，所以只会匹配一个。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/^开头,结尾$/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;^&lt;/code&gt;表示只匹配字符串的开头。看下面的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^c/;
str = &amp;apos;维生素c&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为&lt;code&gt;null&lt;/code&gt;，因为字符串‘维生素c’的开头并不是&lt;code&gt;c&lt;/code&gt;，所以匹配失败。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^c/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次则返回&lt;code&gt;c&lt;/code&gt;，匹配成功，因为&lt;code&gt;cainiao&lt;/code&gt;恰恰是以&lt;code&gt;c&lt;/code&gt;开头的。&lt;/p&gt;
&lt;p&gt;与&lt;code&gt;^&lt;/code&gt;相反，&lt;code&gt;$&lt;/code&gt;则只匹配字符串结尾的字符，同样，看例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c$/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;null&lt;/code&gt;，表示正则表达式没能在字符串的结尾找到&lt;code&gt;c&lt;/code&gt;这个字符。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c$/;
str = &amp;apos;维生素c&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次返回的结果是&lt;code&gt;c&lt;/code&gt;，表明匹配成功。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;点’.’&lt;/code&gt;,&lt;code&gt;‘.’&lt;/code&gt;会匹配字符串中除了换行符&lt;code&gt;\n&lt;/code&gt;之外的所有字符，例如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /./;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果显示，正则匹配到了字符&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /./;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次是&lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /.+/;
str = &amp;apos;blueidea——经典论坛  好_。&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果是&lt;code&gt;“blueidea——经典论坛 好_。“&lt;/code&gt;也就是说所有的字符都被匹配掉了，包括一个空格，一个下滑线，和一个破折号。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /.+/;
reg = /.+/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;同样，直接返回整个字符串——&lt;code&gt;bbs.blueidea.com&lt;/code&gt;，可见&lt;code&gt;”.”&lt;/code&gt;也匹配&lt;code&gt;”.”&lt;/code&gt;本身。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^./;
str = &amp;apos;\ncainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果是&lt;code&gt;null&lt;/code&gt;，终于失败了，正则要求字符串的第一个字符不是换行，但是恰恰字符是以&lt;code&gt;\n&lt;/code&gt;开始的。&lt;/p&gt;
&lt;p&gt;二选一，正则表达式中的或，&lt;code&gt;“|“&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;b|c&lt;/code&gt;表示，匹配&lt;code&gt;b&lt;/code&gt;或者&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /b|c/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果是&lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /b|c/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果是&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^b|c.+/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;匹配掉整个&lt;code&gt;cainiao&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^b|c.+/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果只有一个&lt;code&gt;b&lt;/code&gt;，而不是整个字符串。因为上面正则表达式的意思是，匹配开头的&lt;code&gt;b&lt;/code&gt;或者是&lt;code&gt;c.+&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;括号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^(b|c).+/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次的结果是整个串&lt;code&gt;bbs.blueidea.com&lt;/code&gt;，加上上面的括号后，这个正则的意思是，如果字符串的开头是&lt;code&gt;b&lt;/code&gt;或者&lt;code&gt;c&lt;/code&gt;，那么匹配开头的b或者c以及其后的所有的非换行字符。&lt;/p&gt;
&lt;p&gt;如果你也实验了的话，会发现返回的结果后面多出来一个&lt;code&gt;“,b“&lt;/code&gt;，这是&lt;code&gt;()&lt;/code&gt;内的&lt;code&gt;b|c&lt;/code&gt;所匹配的内容。我们在正则表达式内括号里写的内容会被认为是子正则表达式，所匹配的结果也会被记录下来供后面使用。我们暂且不去理会这个特性。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;字符集合[abc]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;[abc]&lt;/code&gt;表示a或者b或者c中的任意一个字符。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^[abc]/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回结果是&lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^[abc]/;
str = &amp;apos;test&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次的结果就是&lt;code&gt;null&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;我们在字字符集合中使用如下的表示方式:&lt;code&gt;[a-z],[A-Z],[0-9]&lt;/code&gt;，分别表示小写字母，大写字母，数字。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^[a-zA-Z][a-zA-Z0-9_]+/;
str = &amp;apos;test&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果是整个&lt;code&gt;test&lt;/code&gt;，正则的意思是开头必须是英文字母，后面可以是英文字母或者数字以及下划线。&lt;/p&gt;
&lt;h2 id=&quot;反字符集合-abc&quot;&gt;&lt;a href=&quot;#反字符集合-abc&quot; class=&quot;headerlink&quot; title=&quot;反字符集合[^abc]&quot;&gt;&lt;/a&gt;反字符集合[^abc]&lt;/h2&gt;&lt;p&gt;&lt;code&gt;^&lt;/code&gt;在正则表达式开始部分的时候表示开头的意思，例如&lt;code&gt;/^c/&lt;/code&gt;表示开头是&lt;code&gt;c&lt;/code&gt;；但是在字符集和中，它表示的是类似&lt;code&gt;“非“&lt;/code&gt;的意思，例如&lt;code&gt;[^abc]&lt;/code&gt;就表示不能是&lt;code&gt;a&lt;/code&gt;，&lt;code&gt;b&lt;/code&gt;或者&lt;code&gt;c&lt;/code&gt;中的任何一个。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /[^abc]/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回的结果是&lt;code&gt;l&lt;/code&gt;，因为它是第一个非&lt;code&gt;abc&lt;/code&gt;的字符（即第一个&lt;code&gt;b&lt;/code&gt;没有匹配）。同样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /[^abc]/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;则返回&lt;code&gt;i&lt;/code&gt;，前两个字符都是&lt;code&gt;[abc]&lt;/code&gt;集合中的。&lt;/p&gt;
&lt;p&gt;由此我们可知：&lt;code&gt;[^0-9]&lt;/code&gt;表示非数字，&lt;code&gt;[^a-z]&lt;/code&gt;表示非小写字母，一次类推。&lt;/p&gt;
&lt;p&gt;##边界与非边界##&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\b&lt;/code&gt;表示的边界的意思，也就是说，只有字符串的开头和结尾才算数。例如&lt;code&gt;/\bc/&lt;/code&gt;就表示字符串开始的&lt;code&gt;c&lt;/code&gt;或者是结尾的&lt;code&gt;c&lt;/code&gt;。看下面的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\bc/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回结果&lt;code&gt;c&lt;/code&gt;。匹配到了左边界的&lt;code&gt;c&lt;/code&gt;字符。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\bc/;
str = &amp;apos;维生素c&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;仍然返回&lt;code&gt;c&lt;/code&gt;，不过这次返回的是右侧边界的&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\bc/;
str = &amp;apos;bcb&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次匹配失败，因为&lt;code&gt;bcb&lt;/code&gt;字符串中的&lt;code&gt;c&lt;/code&gt;被夹在中间，既不在左边界也不再右边界。&lt;/p&gt;
&lt;p&gt;与&lt;code&gt;\b&lt;/code&gt;对应&lt;code&gt;\B&lt;/code&gt;表示非边界。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\Bc/;
str = &amp;apos;bcb&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次会成功地匹配到&lt;code&gt;bcb&lt;/code&gt;中的&lt;code&gt;c&lt;/code&gt;，。然而&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\Bc/;
str = &amp;apos;cainiao&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;则会返回&lt;code&gt;null&lt;/code&gt;。因为&lt;code&gt;\B&lt;/code&gt;告诉正则，只匹配非边界的&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;##数字与非数字##&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\d&lt;/code&gt;表示数字的意思，相反，&lt;code&gt;\D&lt;/code&gt;表示非数字。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\d/;
str = &amp;apos;cainiao8&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回的匹配结果为&lt;code&gt;8&lt;/code&gt;，因为它是第一个数字字符。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\D/;
str = &amp;apos;cainiao8&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;c&lt;/code&gt;，第一个非数字字符。&lt;/p&gt;
&lt;p&gt;##空白##&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\f&lt;/code&gt;匹配换页符，&lt;code&gt;\n&lt;/code&gt;匹配换行符，&lt;code&gt;\r&lt;/code&gt;匹配回车，&lt;code&gt;\t&lt;/code&gt;匹配制表符，&lt;code&gt;\v&lt;/code&gt;匹配垂直制表符。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\s&lt;/code&gt;匹配单个空格，等同于&lt;code&gt;[\f\n\r\t\v]&lt;/code&gt;。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\s.+/;
str = &amp;apos;This is a test  String.&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;“is a test String.”&lt;/code&gt;，正则的意思是匹配第一个空格以及其后的所有非换行字符。&lt;/p&gt;
&lt;p&gt;同样，&lt;code&gt;\S&lt;/code&gt;表示非空格字符。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\S+/;
str = &amp;apos;This is a test  String.&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;匹配结果为&lt;code&gt;This&lt;/code&gt;，当遇到第一个空格之后，正则就停止匹配了。&lt;/p&gt;
&lt;p&gt;单词字符&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\w&lt;/code&gt;表示单词字符，等同于字符集合&lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt;。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\w+/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回完整的&lt;code&gt;blueidea&lt;/code&gt;字符串，因为所有字符都是单词字符。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\w+/;
str = &amp;apos;.className&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果显示匹配了字符串中的&lt;code&gt;className&lt;/code&gt;，只有第一个&lt;code&gt;“.”&lt;/code&gt;——唯一的非单词字符没有匹配。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\w+/;
str = &amp;apos;中文如何？&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;试图用单词字符去匹配中文自然行不通了，返回&lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\W&lt;/code&gt;表示非单词字符，等效于&lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\W+/;
str = &amp;apos;中文如何？&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回完整的字符串，因为，无论是中文和“&lt;code&gt;？&lt;/code&gt;”都算作是非单词字符。&lt;/p&gt;
&lt;p&gt;##反向引用##&lt;/p&gt;
&lt;p&gt;形式如下：&lt;code&gt;/(子正则表达式)\1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;依旧用例子来说明：&lt;/p&gt;
&lt;p&gt;1.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /\w/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;2.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /(\w)(\w)/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;bl&lt;/code&gt;,&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bl&lt;/code&gt;是整个正则匹配的内容，&lt;code&gt;b&lt;/code&gt;是第一个括号里的子正则表达式匹配的内容，&lt;code&gt;l&lt;/code&gt;是第二个括号匹配的内容。&lt;/p&gt;
&lt;p&gt;3.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /(\w)\1/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;则会返回&lt;code&gt;null&lt;/code&gt;。这里的“&lt;code&gt;\1&lt;/code&gt;”就叫做反向引用，它表示的是第一个括号内的字正则表达式匹配的内容。在上面的例子中，第一个括号里的(&lt;code&gt;\w&lt;/code&gt;)匹配了&lt;code&gt;b&lt;/code&gt;，因此“&lt;code&gt;\1&lt;/code&gt;”就同样表示&lt;code&gt;b&lt;/code&gt;了，在余下的字符串里自然找不到&lt;code&gt;b&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;与第二个例子对比就可以发现，“&lt;code&gt;\1&lt;/code&gt;”是等同于“第1个括号匹配的内容”，而不是“第一个括号的内容”。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /(\w)\1/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个正则则会匹配到&lt;code&gt;bb&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;同样，前面有几个子正则表达式我们就可以使用几个反向引用。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /(\w)(\w)\2\1/;
str = &amp;apos;woow&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;会匹配成功，因为第一个括号匹配到w，第二个括号匹配到&lt;code&gt;o&lt;/code&gt;，而&lt;code&gt;\2\1&lt;/code&gt;则表示&lt;code&gt;ow&lt;/code&gt;，恰好匹配了字符串的最后两个字符。&lt;/p&gt;
&lt;p&gt;##括号（2）##&lt;/p&gt;
&lt;p&gt;前面我们曾经讨论过一次括号的问题，见下面这个例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^(b|c).+/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个正则是为了实现只匹配以&lt;code&gt;b&lt;/code&gt;或者&lt;code&gt;c&lt;/code&gt;开头的字符串，一直匹配到换行字符，但是。上面我们已经看到了，可以使用“&lt;code&gt;\1&lt;/code&gt;”来反向引用这个括号里的子正则表达式所匹配的内容。而且&lt;code&gt;exec&lt;/code&gt;方法也会将这个字正则表达式的匹配结果保存到返回的结果中。&lt;/p&gt;
&lt;p&gt;不记录子正则表达式的匹配结果&lt;/p&gt;
&lt;p&gt;使用形如&lt;code&gt;(?:pattern)&lt;/code&gt;的正则就可以避免保存括号内的匹配结果。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^(?:b|c).+/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到返回的结果不再包括那个括号内的字正则表达式多匹配的内容。&lt;/p&gt;
&lt;p&gt;同理，反向引用也不好使了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^(b|c)\1/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;bb&lt;/code&gt;,&lt;code&gt;b&lt;/code&gt;。&lt;code&gt;bb&lt;/code&gt;是整个正则表达式匹配的内容，而b是第一个子正则表达式匹配的内容。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /^(?:b|c)\1/;
str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;null&lt;/code&gt;。由于根本就没有记录括号内匹配的内容，自然没有办法反向引用了。&lt;/p&gt;
&lt;p&gt;##正向预查##&lt;/p&gt;
&lt;p&gt;形式：&lt;code&gt;(?=pattern)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所谓正向预查，意思就是：要匹配的字符串，后面必须紧跟着pattern！&lt;/p&gt;
&lt;p&gt;我们知道正则表达式&lt;code&gt;/cainiao/&lt;/code&gt;会匹配&lt;code&gt;cainiao&lt;/code&gt;。同样，也会匹配&lt;code&gt;cainiao9&lt;/code&gt;中的&lt;code&gt;cainiao&lt;/code&gt;。但是我们可能希望，&lt;code&gt;cainiao&lt;/code&gt;只能匹配&lt;code&gt;cainiao8&lt;/code&gt;中的菜鸟。这时候就可以像下面这样写：&lt;code&gt;/cainiao(?=8)/&lt;/code&gt;，看两个实例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /cainiao(?=8)/;
str = &amp;apos;cainiao9&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /cainiao(?=8)/;
str = &amp;apos;cainiao8&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;匹配&lt;code&gt;cainiao&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;需要注意的是，括号里的内容并不参与真正的匹配，只是检查一下后面的字符是否符合要求而已，例如上面的正则，返回的是&lt;code&gt;cainiao&lt;/code&gt;，而不是&lt;code&gt;cainiao8&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;再来看两个例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /blue(?=idea)/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;匹配到&lt;code&gt;blue&lt;/code&gt;，而不是&lt;code&gt;blueidea&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /blue(?=idea)/;
str = &amp;apos;bluetooth&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;null&lt;/code&gt;，因为&lt;code&gt;blue&lt;/code&gt;后面不是&lt;code&gt;idea&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /blue(?=idea)/;
str = &amp;apos;bluetoothidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;同样返回&lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;##?!##&lt;/p&gt;
&lt;p&gt;形式&lt;code&gt;(?!pattern)&lt;/code&gt;和&lt;code&gt;?=&lt;/code&gt;恰好相反，要求字符串的后面不能紧跟着某个&lt;code&gt;pattern&lt;/code&gt;，还拿上面的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /blue(?!idea)/;
str = &amp;apos;blueidea&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;null&lt;/code&gt;，因为正则要求，&lt;code&gt;blue&lt;/code&gt;的后面不能是&lt;code&gt;idea&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /blue(?!idea)/;
str = &amp;apos;bluetooth&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;则成功返回&lt;code&gt;blue&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;##匹配元字符##&lt;/p&gt;
&lt;p&gt;首先要搞清楚什么是元字符呢？我们之前用过&lt;code&gt;*,+,?&lt;/code&gt;之类的符号，它们在正则表达式中都有一定的特殊含义，类似这些有特殊功能的字符都叫做元字符。例如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c*/;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;表示有任意个&lt;code&gt;c&lt;/code&gt;，但是如果我们真的想匹配’&lt;code&gt;c*&lt;/code&gt;’这个字符串的时候怎么办呢？只要将*转义了就可以了，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg = /c\*/;
str = &amp;apos;c*&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回匹配的字符串：&lt;code&gt;c*&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;同理，要匹配其他元字符，只要在前面加上一个“&lt;code&gt;\&lt;/code&gt;”就可以了。&lt;/p&gt;
&lt;p&gt;##正则表达式的修饰符##&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全局匹配，修饰符g&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;形式：&lt;code&gt;/pattern/g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例子：&lt;code&gt;reg = /b/g;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;后面再说这个&lt;code&gt;g&lt;/code&gt;的作用。先看后面的两个修饰符。&lt;/p&gt;
&lt;p&gt;不区分大小写，修饰符&lt;code&gt;i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;形式：&lt;code&gt;/pattern/i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /b/;
var str = &amp;apos;BBS&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回&lt;code&gt;null&lt;/code&gt;，因为大小写不符合。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /b/i;
var str = &amp;apos;BBS&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;匹配到&lt;code&gt;B&lt;/code&gt;，这个就是&lt;code&gt;i&lt;/code&gt;修饰符的作用了。&lt;/p&gt;
&lt;p&gt;行首行尾，修饰符&lt;code&gt;m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;形式：&lt;code&gt;/pattern/m&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;m&lt;/code&gt;修饰符的作用是修改^和$在正则表达式中的作用，让它们分别表示行首和行尾。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /^b/;
var str = &amp;apos;test\nbbs&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;匹配失败，因为字符串的开头没有b字符。但是加上m修饰符之后：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /^b/m;
var str = &amp;apos;test\nbbs&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;匹配到&lt;code&gt;b&lt;/code&gt;，因为加了&lt;code&gt;m&lt;/code&gt;修饰符之后，^已经表示行首，由于&lt;code&gt;bbs&lt;/code&gt;在字符串第二行的行首，所以可以成功地匹配。&lt;/p&gt;
&lt;p&gt;##exec方法详解##&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exec&lt;/code&gt;方法的返回值&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exec&lt;/code&gt;方法返回的其实并不是匹配结果字符串，而是一个对象，简单地修改一下&lt;code&gt;execReg&lt;/code&gt;函数，来做一个实验就可以印证这一点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function  execReg(reg,str){   
    var result =  reg.exec(str);   
    alert(typeof result);  
}  
var reg = /b/;  
var  str=&amp;apos;bbs.bblueidea.com&amp;apos;;  
execReg(reg,str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果显示&lt;code&gt;result&lt;/code&gt;的类型是&lt;code&gt;object&lt;/code&gt;。而且是一个类似数组的对象。使用&lt;code&gt;for in&lt;/code&gt;可以知道它的属性: &lt;code&gt;index input 0&lt;/code&gt;。其中&lt;code&gt;index&lt;/code&gt;是表示匹配在原字符串中的索引；而&lt;code&gt;input&lt;/code&gt;则是表示输入的字符串；&lt;/p&gt;
&lt;p&gt;至于&lt;code&gt;0&lt;/code&gt;则是表示只有一个匹配结果，可以用下标0来引用这个匹配结果，这个数量可能改变。我们可以通过返回值的length属性来得知匹配结果的总数量。&lt;/p&gt;
&lt;p&gt;根据以上对返回值的分析，修改execReg函数如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function execReg(reg, str) {
    var result = reg.exec(str);
    document.write(&amp;apos;index:&amp;apos; + result.index + &amp;apos;&amp;lt;br  /&amp;gt;&amp;apos; + &amp;apos;input:&amp;apos; + result.input + &amp;apos;&amp;lt;br  /&amp;gt;&amp;apos;);
    for (i = 0; i &amp;lt; result.length; i++) {
            document.write(&amp;apos;result[&amp;apos; + i + &amp;apos;]:&amp;apos; + result[i] + &amp;apos;&amp;lt;br  /&amp;gt;&amp;apos;)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;马上来实验一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /\w/;
var str = &amp;apos;bbs.bblueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index:0

input:bbs.bblueidea.com

result[0]:b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入字符串为&lt;code&gt;bbs.bblueidea.com&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;匹配的&lt;code&gt;b&lt;/code&gt;在原字符串的索引是&lt;code&gt;0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;正则的匹配结果为一个，&lt;code&gt;b&lt;/code&gt;；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /(\w)(\w)(.+)/;
var str = &amp;apos;bbs.bblueidea.com&amp;apos;;
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index:0
input:bbs.bblueidea.com
result[0]:bbs.bblueidea.com
result[1]:b
result[2]:b
result[3]:s.bblueidea.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由上面两个例子可见，返回对象&lt;code&gt;[0]&lt;/code&gt;就是整个正则表达式所匹配的内容。后续的元素则是各个子正则表达式的匹配内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exec&lt;/code&gt;方法对正则表达式的更新&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exec&lt;/code&gt;方法在返回结果对象的同时，还可能会更新原来的正则表达式，这就要看正则表达式是否设置了g修饰符。先来看两个例子吧：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /b/;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index:0
input:bbs.blueidea.com
result[0]:b
index:0
input:bbs.blueidea.com
result[0]:b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也就是说，两次匹配的结果完全一样，从索引可以看出来，匹配的都是字符串首的b字符。&lt;/p&gt;
&lt;p&gt;下面看看设置了g的正则表达式表现如何：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /b/g;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
execReg(reg, str);
execReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index:0
input:bbs.blueidea.com
result[0]:b
index:1
input:bbs.blueidea.com
result[0]:b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看得出来，第二次匹配的是字符串的字符串的第二个&lt;code&gt;b&lt;/code&gt;。这也就是&lt;code&gt;g&lt;/code&gt;修饰符的作用了，下面来看&lt;code&gt;exec&lt;/code&gt;是如何区别对待&lt;code&gt;g&lt;/code&gt;和非&lt;code&gt;g&lt;/code&gt;正则表达式的。&lt;/p&gt;
&lt;p&gt;如果正则表达式没有设置g，那么&lt;code&gt;exec&lt;/code&gt;方法不会对正则表达式有任何的影响，如果设置了&lt;code&gt;g&lt;/code&gt;，那么&lt;code&gt;exec&lt;/code&gt;执行之后会更新正则表达式的&lt;code&gt;lastIndex&lt;/code&gt;属性，表示本次匹配后，所匹配字符串的下一个字符的索引，下一次再用这个正则表达式匹配字符串的时候就会从上次的lastIndex属性开始匹配，也就是上面两个例子结果不同的原因了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;test方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;test方法仅仅检查是否能够匹配str，并且返回布尔值以表示是否成功。同样建立一个简单的测试函数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function testReg(reg, str) {
        alert(reg.test(str));
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;实例1&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /b/;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
testReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;成功，输出&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;实例2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /9/;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
testReg(reg, str);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;失败，返回&lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;使用字符串的方法执行正则表达式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;match方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;形式：&lt;code&gt;str.match(reg)&lt;/code&gt;;&lt;/p&gt;
&lt;p&gt;与正则表达式的exec方法类似，该方法同样返回一个类似数组的对象，也有&lt;code&gt;input&lt;/code&gt;和&lt;code&gt;index&lt;/code&gt;属性。我们定义如下一个函数用来测试：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function matchReg(reg, str) {
    var result = str.match(reg);
    if (result) {
            document.write(&amp;apos;index:&amp;apos; + result.index + &amp;apos;&amp;lt;br  /&amp;gt;&amp;apos; + &amp;apos;input:&amp;apos; + result.input + &amp;apos;&amp;lt;br  /&amp;gt;&amp;apos;);
            for (i = 0; i &amp;lt; result.length; i++) {
                    document.write(&amp;apos;result[&amp;apos; + i + &amp;apos;]:&amp;apos; + result[i] + &amp;apos;&amp;lt;br  /&amp;gt;&amp;apos;)
            }
    } else {
            alert(&amp;apos;null：匹配失败！&amp;apos;)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如：&lt;br&gt;    var reg = /b/;&lt;br&gt;    var str = ‘bbs.blueidea.com’;&lt;br&gt;    matchReg(reg, str);&lt;/p&gt;
&lt;p&gt;结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index:0
input:bbs.blueidea.com
result[0]:b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可见，和&lt;code&gt;exec&lt;/code&gt;的结果一样。&lt;/p&gt;
&lt;p&gt;但是如果正则表达式设置了&lt;code&gt;g&lt;/code&gt;修饰符，&lt;code&gt;exec&lt;/code&gt;和&lt;code&gt;match&lt;/code&gt;的行为可就不一样了，见下例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index:undefined
input:undefined
result[0]:b
result[1]:b
result[2]:b
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置了&lt;code&gt;g&lt;/code&gt;修饰符的正则表达式在完成一次成功匹配后不会停止，而是继续找到所有可以匹配到的字符。返回的结果包括了三个&lt;code&gt;b&lt;/code&gt;。不过没有提供&lt;code&gt;input&lt;/code&gt;和&lt;code&gt;index&lt;/code&gt;这些信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;replace方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;形式：&lt;code&gt;str. replace (reg,’new str’);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;它的作用是将&lt;code&gt;str&lt;/code&gt;字符串中匹配&lt;code&gt;reg&lt;/code&gt;的部分用&lt;code&gt;’’new str”&lt;/code&gt;部分代码，值得注意的是原字符串并不会被修改，而是作为返回值被返回。例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /b/;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
var newStr = str.replace(reg, &amp;apos;c&amp;apos;);
document.write(newStr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为&lt;code&gt;cbs.blueidea.com&lt;/code&gt;，只有第一个&lt;code&gt;b&lt;/code&gt;被替换为&lt;code&gt;c&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /b/g;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
var newStr = str.replace(reg, &amp;apos;c&amp;apos;);
document.write(newStr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出&lt;code&gt;ccs.clueidea.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于，设置了&lt;code&gt;g&lt;/code&gt;修饰符，所以会替换掉所有的&lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /\w+/g;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
var newStr = str.replace(reg, &amp;apos;word&amp;apos;);
document.write(newStr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;word.word.word。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在&lt;code&gt;replace&lt;/code&gt;函数中使用&lt;code&gt;$&lt;/code&gt;引用子正则表达式匹配内容&lt;/p&gt;
&lt;p&gt;就像在正则里我们可以使用&lt;code&gt;\1&lt;/code&gt;来引用第一个子正则表达式所匹配的内容一样，我们在&lt;code&gt;replace&lt;/code&gt;函数的替换字符里也可以使用&lt;code&gt;$1&lt;/code&gt;来引用相同的内容。&lt;/p&gt;
&lt;p&gt;还是来看一个例子吧：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /(\w+).(\w+).(\w+)/;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
var newStr = str.replace(reg, &amp;apos;$1.$1.$1&amp;apos;);
document.write(newStr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出的结果为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bbs.bbs.bbs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;首先，我们知道第一个子正则表达式匹配到了&lt;code&gt;bbs&lt;/code&gt;，那么&lt;code&gt;$1&lt;/code&gt;也就代表&lt;code&gt;bbs&lt;/code&gt;了。其后我们把替换字符串设置为&lt;code&gt;&amp;#39;$1.$1.$1&amp;#39;&lt;/code&gt;,其实也就是&lt;code&gt;“bbs.bbs.bbs”&lt;/code&gt;。同理，&lt;code&gt;$2&lt;/code&gt;就是&lt;code&gt;blueidea&lt;/code&gt;，&lt;code&gt;$3&lt;/code&gt;就是&lt;code&gt;com&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在来看一个例子，颠倒空格前后两个单词的顺序。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /(\w+)\s(\w+)/;
var str = &amp;apos;cainiao  gaoshou&amp;apos;;
var newStr = str.replace(reg, &amp;apos;$2 $1&amp;apos;);
document.write(newStr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为：&lt;code&gt;gaoshou cainiao&lt;/code&gt;，也就是空格前后的单词被调换顺序了。&lt;/p&gt;
&lt;p&gt;由于在替换文本里&lt;code&gt;$&lt;/code&gt;有了特殊的含义，所以我们如果想要是用&lt;code&gt;$&lt;/code&gt;这个字符的话，需要写成&lt;code&gt;$$&lt;/code&gt;，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /(\w+)\s(\w+)/;
var str = &amp;apos;cainiao  gaoshou&amp;apos;;
var newStr = str.replace(reg, &amp;apos;$ $&amp;apos;);
document.write(newStr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为：&lt;code&gt;$ $。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;search&lt;/code&gt;方法和&lt;code&gt;split&lt;/code&gt;方法&lt;br&gt;同样，字符串的&lt;code&gt;search&lt;/code&gt;方法和&lt;code&gt;split&lt;/code&gt;方法中也可以使用正则表达式，形式如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str.search(reg);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;search&lt;/code&gt;返回正则表达式第一次匹配的位置。例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /idea/;
var str = &amp;apos;blueidea&amp;apos;;
var pos = str.search(reg);
document.write(pos);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为&lt;code&gt;4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下面的例子找出第一个非单词字符：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /\W/;
var str = &amp;apos;bbs.blueidea.com&amp;apos;;
var pos = str.search(reg);
document.write(pos);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为&lt;code&gt;3&lt;/code&gt;，也就是那个点“&lt;code&gt;.&lt;/code&gt;”的位置。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str.split(reg,’seprator’);
split返回分割后的数组，例如：
var reg = /\W/;
var str =  &amp;apos;bbs.blueidea.com&amp;apos;;
var arr =  str.split(reg);
document.write(arr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为：&lt;code&gt;bbs,blueidea,com&lt;/code&gt;，可见数组被非单词字符分为了有三个元素的数组。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var reg = /\W/;
var str = &amp;apos;http://www.baidu.com/&amp;apos;;
var arr = str.split(reg);
document.write(arr.length + &amp;apos;&amp;lt;br  /&amp;gt;&amp;apos;);
document.write(arr);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7
http,,,www,baidu,com,
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可见字符串被分为了有&lt;code&gt;7&lt;/code&gt;个元素的数组，其中包括了三个为空字符串的元素。&lt;/p&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;什么是正则表达式？&lt;/p&gt;
&lt;p&gt;这个问题可以参见：“正则表达式30分钟入门教程”，很多编程语言都支持正则表达式，本文仅仅讨论JavaScript中的正则表达式。&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://tomieric.github.io/categories/JavaScript/"/>
    
    
      <category term="-javascript" scheme="http://tomieric.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Gulp.js构建工具入门</title>
    <link href="http://tomieric.github.io/2014/08/20/gulp/"/>
    <id>http://tomieric.github.io/2014/08/20/gulp/</id>
    <published>2014-08-19T16:00:00.000Z</published>
    <updated>2016-02-21T14:49:24.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp官网&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;基本入门&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全局安装&lt;code&gt;gulp.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; gulp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;为项目目录安装&lt;code&gt;gulp.js&lt;/code&gt;库文件&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#cd c:&lt;span class=&quot;comment&quot;&gt;//myproject/demo1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install --&lt;span class=&quot;built_in&quot;&gt;save&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;dev&lt;/span&gt; gulp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;在项目根目录创建&lt;code&gt;gulpfile.js&lt;/code&gt;文件并写入以下模板。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;运行&lt;code&gt;gulp&lt;/code&gt;任务。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;		gulp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;escape&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;escape&quot;&gt;` &lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;基本入门就&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;步可以完成，比起&lt;span class=&quot;escape&quot;&gt;`g&lt;/span&gt;runt&lt;span class=&quot;escape&quot;&gt;`各&lt;/span&gt;种配置简单许多。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##Gulp.js进阶 ##&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;var gulp = require(&amp;apos;gulp&amp;apos;);

/**
# 依赖插件可以在package.json中配置
# npm install安装插件
**/
var contact = require(&amp;apos;gulp-concat&amp;apos;);
var uglify = require(&amp;apos;gulp-uglify&amp;apos;);
var sourcemaps = require(&amp;apos;gulp-sourcemaps&amp;apos;);
var imagemin = require(&amp;apos;gulp-imagemin&amp;apos;)
//var del = require(&amp;apos;del&amp;apos;);

var paths = {
    scripts: &amp;apos;static/js/**/*.js&amp;apos;,
    images: &amp;apos;static/images/**/*&amp;apos;
};

// 清空build目录文件
//# npm install --save-dev gulp-clean
gulp.task(&amp;apos;clean&amp;apos;, function(cb){
    //del([&amp;apos;build&amp;apos;], cb); #del不存在该模块，官方api居然有这句具体不知道怎么来
    cb();
});

// 处理js文件
//# npm install --save-dev gulp-sourcemaps
//# npm install --save-dev gulp-uglify
gulp.task(&amp;apos;scripts&amp;apos;, [&amp;apos;clean&amp;apos;], function(){
    return gulp.src(paths.scripts)
                .pipe(sourcemaps.init())
                .pipe(uglify())
                .pipe(sourcemaps.write(&amp;apos;build/maps&amp;apos;))
                .pipe(gulp.dest(&amp;apos;build/js&amp;apos;));
});

// 复制图片
//# npm install --save-dev gulp-images
gulp.task(&amp;apos;images&amp;apos;, [&amp;apos;clean&amp;apos;], function(){
    return gulp.src(paths.images)
                .pipe(imagemin({optimizationLevel: 5}))
                .pipe(gulp.dest(&amp;apos;build/images&amp;apos;));
});

// 文件监听
gulp.task(&amp;apos;watch&amp;apos;, function(){
    gulp.watch(paths.scripts, [&amp;apos;scripts&amp;apos;]);
    gulp.watch(paths.images, [&amp;apos;images&amp;apos;]);
});

// 配置默认任务，执行[&amp;apos;watch&amp;apos;, &amp;apos;scripts&amp;apos;, &amp;apos;images&amp;apos;]
gulp.task(&amp;apos;default&amp;apos;, [&amp;apos;watch&amp;apos;, &amp;apos;scripts&amp;apos;, &amp;apos;images&amp;apos;]);
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;vala&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;##模板一&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;/**
 * 构建环境
 */

var gulp = require(&amp;apos;gulp&amp;apos;)

var concat = require(&amp;apos;gulp-concat&amp;apos;),
    uglify = require(&amp;apos;gulp-uglify&amp;apos;),
    imagemin = require(&amp;apos;gulp-imagemin&amp;apos;),
    less = require(&amp;apos;gulp-less&amp;apos;),
    minifycss = require(&amp;apos;gulp-minify-css&amp;apos;),
    rename = require(&amp;apos;gulp-rename&amp;apos;),
    livereload = require(&amp;apos;gulp-livereload&amp;apos;),
    autoprefixer = require(&amp;apos;gulp-autoprefixer&amp;apos;),
    cache = require(&amp;apos;gulp-cache&amp;apos;),
    notify = require(&amp;apos;gulp-notify&amp;apos;),
    connect = require(&amp;apos;gulp-connect&amp;apos;),
    del = require(&amp;apos;del&amp;apos;);

var paths = {
    styles: &amp;apos;src/css/**/*.css&amp;apos;,
    less: &amp;apos;src/less/**/*.less&amp;apos;,
    scripts: [&amp;apos;src/js/jquery.js&amp;apos;,&amp;apos;src/js/common/**/*.js&amp;apos;],
    images: &amp;apos;src/images/**/*&amp;apos;,
    gallery: &amp;apos;src/gallery/**/*&amp;apos;,
    index: [&amp;apos;src/gallery/jquery.bxslider/jquery.bxslider.min.js&amp;apos;, &amp;apos;src/js/app/index.js&amp;apos;]
};

gulp.task(&amp;apos;scripts&amp;apos;, function(){
    return gulp.src(paths.scripts)
                .pipe(concat(&amp;apos;main.js&amp;apos;))
                .pipe(gulp.dest(&amp;apos;dist/js&amp;apos;))
                //.pipe(rename({suffix: &amp;apos;.min&amp;apos;}))
                .pipe(uglify())
                .pipe(gulp.dest(&amp;apos;dist/js&amp;apos;))
                .pipe(notify(&amp;apos;js任务运行完成&amp;apos;))
});

gulp.task(&amp;apos;images&amp;apos;, function(){
    return gulp.src(paths.images)
                .pipe(cache(imagemin({ optimizationLevel: 5, progressive: true, interlaced: true })))
                .pipe(gulp.dest(&amp;apos;dist/images&amp;apos;))
                //.pipe(notify(&amp;apos;图片压缩完成&amp;apos;))
})

gulp.task(&amp;apos;styles&amp;apos;, function(cb){
    return gulp.src(&amp;apos;src/less/main.less&amp;apos;)
                .pipe(less())
                .pipe(autoprefixer(&amp;apos;last 2 version&amp;apos;, &amp;apos;safari 5&amp;apos;, &amp;apos;ie 8&amp;apos;, &amp;apos;ie 9&amp;apos;, &amp;apos;opera 12.1&amp;apos;, &amp;apos;ios 6&amp;apos;, &amp;apos;android 4&amp;apos;))
                .pipe(gulp.dest(&amp;apos;src/css&amp;apos;))
                .pipe(notify(&amp;apos;less样式文件完成&amp;apos;));
})

gulp.task(&amp;apos;concat&amp;apos;, [&amp;apos;styles&amp;apos;], function(){
    return gulp.src(paths.styles)
                .pipe(concat(&amp;apos;main.css&amp;apos;))
                .pipe(gulp.dest(&amp;apos;dist/css&amp;apos;))
                //.pipe(rename({suffix: &amp;apos;.min&amp;apos;}))
                .pipe(minifycss())
                .pipe(gulp.dest(&amp;apos;dist/css&amp;apos;))
                .pipe(notify(&amp;apos;样式文件完成&amp;apos;))
})

// gallery 插件
/*gulp.task(&amp;apos;copy&amp;apos;, function(){
    return gulp.src(paths.gallery)
                .pipe(gulp.dest(&amp;apos;dist/gallery&amp;apos;));
});*/

gulp.task(&amp;apos;clean&amp;apos;, function(cb){
    del([&amp;apos;dist/js&amp;apos;, &amp;apos;dist/images&amp;apos;, &amp;apos;dist/css&amp;apos;], cb);
})

gulp.task(&amp;apos;html&amp;apos;, function(){
    return gulp.src(&amp;apos;*.html&amp;apos;)
                .pipe(connect.reload());
})

gulp.task(&amp;apos;connect&amp;apos;, function(){
    connect.server({
        root: &amp;apos;../ghlaw&amp;apos;,
        livereload: true
    });
})

/*
* 首页
 */
gulp.task(&amp;apos;index&amp;apos;, function(){
    return gulp.src(paths.index)
                .pipe(concat(&amp;apos;index.js&amp;apos;))
                .pipe(gulp.dest(&amp;apos;dist/js&amp;apos;))
                //.pipe(rename({suffix: &amp;apos;.min&amp;apos;}))
                .pipe(uglify())
                .pipe(gulp.dest(&amp;apos;dist/js&amp;apos;))
                .pipe(notify(&amp;apos;首页js任务运行完成&amp;apos;))
});

gulp.task(&amp;apos;watch&amp;apos;, function(){

    gulp.watch(paths.scripts, [&amp;apos;scripts&amp;apos;])
    gulp.watch(paths.images, [&amp;apos;images&amp;apos;])
    gulp.watch(paths.less, [&amp;apos;concat&amp;apos;])
    //gulp.watch(paths.gallery, [&amp;apos;copy&amp;apos;])
    gulp.watch(paths.index, [&amp;apos;index&amp;apos;])

    livereload.listen()
    gulp.watch([&amp;apos;/dist/**&amp;apos;]).on(&amp;apos;change&amp;apos;, livereload.changed)
    gulp.watch([&amp;apos;**/*.html&amp;apos;], [&amp;apos;html&amp;apos;])
})

gulp.task(&amp;apos;default&amp;apos;, [&amp;apos;clean&amp;apos;], function(){
    gulp.start([&amp;apos;connect&amp;apos;,&amp;apos;watch&amp;apos;, &amp;apos;scripts&amp;apos;, &amp;apos;images&amp;apos;, &amp;apos;concat&amp;apos;, &amp;apos;index&amp;apos;]);
});
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;##模板二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;``&lt;span class=&quot;javascript&quot;&gt; javascript&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 构建环境&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * by tomieric&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * gulpfile.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulp = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; useref = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-useref&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; gulpif = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-if&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minifycss = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-minify-css&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uglify = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-uglify&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; notify = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-notify&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; imagemin = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-imagemin&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cache = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-cache&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rev = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;gulp-rev&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; del = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;del&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;copyimage&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;cb&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./images/**/*&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.pipe(cache(imagemin(&amp;#123; optimizationLevel: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, progressive: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, interlaced: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#125;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					.pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;./dist/images&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cb()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;clean&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;copyimage&#39;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; assets = useref.assets()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; gulp.src(&lt;span class=&quot;string&quot;&gt;&#39;./index.html&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.pipe(assets)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.pipe(gulpif(&lt;span class=&quot;string&quot;&gt;&#39;*.js&#39;&lt;/span&gt;, uglify()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.pipe(gulpif(&lt;span class=&quot;string&quot;&gt;&#39;*.css&#39;&lt;/span&gt;, minifycss()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.pipe(assets.restore())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.pipe(useref())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.pipe(gulp.dest(&lt;span class=&quot;string&quot;&gt;&#39;dist&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.pipe(notify(&lt;span class=&quot;string&quot;&gt;&#39;构建完成&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;clean&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;cb&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		del([&lt;span class=&quot;string&quot;&gt;&#39;./dist&#39;&lt;/span&gt;], cb)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* watch */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;watch&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		gulp.watch(&lt;span class=&quot;string&quot;&gt;&#39;./js/*.js&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		gulp.watch(&lt;span class=&quot;string&quot;&gt;&#39;./css/style.css&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* task */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	gulp.task(&lt;span class=&quot;string&quot;&gt;&#39;default&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;clean&#39;&lt;/span&gt;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		gulp.start([&lt;span class=&quot;string&quot;&gt;&#39;watch&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;html&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- build:css css/combined.css --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;css/one.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;css/two.css&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- endbuild --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- build:js scripts/combined.js --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;scripts/one.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;scripts/two.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- endbuild --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;css/combined.css&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;scripts/combined.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nimojs/gulp-book&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-book中文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/yeol/blog/blob/master/20140828_building_with_gulp.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Building With Gulp中文版&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://rookieone.gitbooks.io/learning-gulp/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Learning Gulp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://davinov.gitbooks.io/gulp-book/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp-book&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.segmentfault.com/nightire/1190000000435599&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“流式”前端构建工具——gulp.js 简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://v.youku.com/v_show/id_XNzUyNzc5Nzky.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp视频教程之一：gulp是什么gulp能做什么&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp入门教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://colobu.com/2014/11/17/gulp-plugins-introduction/#gulp-usemin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp plugins 插件介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://csspod.com/advanced-tips-for-using-gulp-js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gulp高级进阶&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://gulpjs.com/&quot;&gt;gulp官网&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;基本入门&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全局安装&lt;code&gt;gulp.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;g&lt;/span&gt; gulp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端构建" scheme="http://tomieric.github.io/categories/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="-前端构建 -gulp" scheme="http://tomieric.github.io/tags/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA-gulp/"/>
    
  </entry>
  
</feed>
